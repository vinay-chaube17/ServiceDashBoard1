@using ServiceDashBoard1.Data
@model ComplaintRegistrationViewModel

@{
    ViewData["Title"] = "Create";
}


<h1 class="text-center">Register Complaint </h1>

<div>
    <a asp-controller="ComplaintRegistrations" asp-action="Index" class="btn btn-primary mx-5 ">Back to AdminDashBoard</a>
</div>

<hr />
<div class="row" >
    <div class="justify-content-center align-items-center">
        <form asp-controller="ComplaintRegistrations" asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

           
            <!-- Machine Serial Number -->
            <div class="form-group">
                <label asp-for="MachineSerialNo" class="control-label"></label>
                <input asp-for="MachineSerialNo" class="form-control" />
                <span asp-validation-for="MachineSerialNo" class="text-danger"></span>
            </div>

            <!-- Company Name -->
            <div class="form-group">
                <label asp-for="CompanyName" class="control-label"></label>
                <input asp-for="CompanyName" class="form-control" />
                <span asp-validation-for="CompanyName" class="text-danger"></span>
            </div>

            <!-- Email -->
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>  <!-- ✅ Error yaha show hoga -->
            </div>


            <!-- Phone Number -->
            <div class="form-group">
                <label asp-for="PhoneNo" class="control-label"></label>
                <input asp-for="PhoneNo" class="form-control" />
                <span asp-validation-for="PhoneNo" class="text-danger"></span>  <!-- ✅ Error yaha show hoga -->
            </div>

            <!-- Address -->
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>

            <!-- Contact Person -->
            <div class="form-group">
                <label asp-for="ContactPerson" class="control-label"></label>
                <input asp-for="ContactPerson" class="form-control" />
                <span asp-validation-for="ContactPerson" class="text-danger"></span>
            </div>

            <!-- Complaint Description -->
            <div class="form-group">
                <label asp-for="ComplaintDescription" class="control-label"></label>
                <input asp-for="ComplaintDescription" class="form-control" />
                <span asp-validation-for="ComplaintDescription" class="text-danger"></span>
            </div>

            <!-- Image Base64 -->
            <!-- Image Upload -->
            <div class="form-group">
                <label class="control-label">Upload Image</label>
                <input type="file" id="imageUpload" class="form-control" accept="image/png, image/jpeg" />
                <input type="hidden" asp-for="ImageBase64" id="imageBase64" />
                <span id="imageError" class="text-danger" style="display: none;"></span> <!-- Validation Message -->
            </div>

            <!-- Image Preview -->
            <img id="previewImage" src="" alt="Image Preview" style="max-width: 200px; display: none; margin-top: 10px; margin-right: 15px;" />

            <!-- Remove Image Button (Initially Hidden) -->
            <button type="button" id="removeImage" style="display: none; margin-top: 10px; padding: 5px 10px; font-size: 16px;"> ❌ </button>


           
            <!-- Main Problems as Checkboxes -->
            <div class="form-group">
                <label asp-for="SelectedMainProblems" class="control-label"></label>
                <select id="SelectedMainProblems" asp-for="SelectedMainProblems" asp-items="ViewBag.MainProblems" class="form-control" multiple="multiple"></select>
                <div id="MainProblemCheckboxes"></div> <!-- 🔥 Here Checkboxes Will Appear -->
                <span asp-validation-for="SelectedMainProblems" class="text-danger"></span>
            </div>



            <input type="hidden" id="HiddenSubProblems" name="SelectedSubProblems" value=""> <!-- ✅ Hidden input added -->
            <!-- Sub Problems as Checkboxes -->
            <div class="form-group">
                <label asp-for="SelectedSubProblems" class="control-label"></label>
                <select id="SelectedSubProblems" asp-for="SelectedSubProblems" asp-items="ViewBag.SubProblems" class="form-control" multiple="multiple"></select>
                <div id="SubProblemCheckboxes"></div> <!-- 🔥 Here Checkboxes Will Appear -->
                <span asp-validation-for="SelectedSubProblems" class="text-danger"></span>
            </div>


            <div class="mb-3">
                <label for="Role" class="form-label">AssignTo</label>
                <select class="form-control" name="Role">
                    <option value="Sparepart">Sparepart</option>
                    <option value="Service Engineer">Service Engineer</option>
                    <option value="Field Engineer">Field Engineer</option>
                </select>
            </div>



            <div class="form-group text-center mt-4  ">
                <input type="submit" value="Submit" class="btn btn-success mx-5"
                       onclick="return confirm('Are you sure you want to submit?');" />      

            </div>
        </form>
    </div>
</div>

@* <div> *@
@*     <a asp-controller="ComplaintRegistrations" asp-action="Index">Back to List</a> *@
@* </div> *@

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
       

                $(document).ready(function () {


                         $("#imageUpload").change(function () {
            var file = this.files[0];

             console.log("File selected:", file);

            $("#imageError").text("").hide();
            $("#previewImage").hide();
            $("#removeImage").hide();

            if (file) {
                var fileType = file.type;
                var fileSize = file.size;

           console.log("Original File Size:", fileSize, "bytes");



                var allowedTypes = ["image/jpeg", "image/png"];
                if (!allowedTypes.includes(fileType)) {

                     console.error("Invalid file type!");

                    $("#imageError").text("Only JPG and PNG images are allowed.").show();
                    return;
                }

                var maxSize = 2 * 1024 * 1024; // 2MB
                if (fileSize > maxSize) {
                    $("#imageError").text("File size must be less than 2MB.").show();
                    return;
                }

                var reader = new FileReader();
                reader.onload = function (e) {
                    var img = new Image();
                    img.src = e.target.result;

                    img.onload = function () {
                        var canvas = document.createElement("canvas");
                        var ctx = canvas.getContext("2d");

                        var maxWidth = 100; // ✅ Reduced width
                        var maxHeight = 80; // ✅ Reduced height
                        var width = img.width;
                        var height = img.height;

                      console.log("Original Image Size:", width, "x", height);



                        if (width > height) {
                            if (width > maxWidth) {
                                height *= maxWidth / width;
                                width = maxWidth;
                            }
                        } else {
                            if (height > maxHeight) {
                                width *= maxHeight / height;
                                height = maxHeight;
                            }
                        }

                      console.log("Resized Image Size:", width, "x", height);

                        canvas.width = width;
                        canvas.height = height;
                        ctx.drawImage(img, 0, 0, width, height);

                        // ✅ Convert to WebP for smaller Base64 size
                        canvas.toBlob(function (blob) {
                            var compressedReader = new FileReader();
                            compressedReader.onloadend = function () {
                                var compressedBase64 = compressedReader.result.split(',')[1];

                      console.log("Compressed Base64 Length:", compressedBase64.length);


                                $("#imageBase64").val(compressedBase64);
                                $("#previewImage").attr("src", compressedReader.result).show();
                                $("#removeImage").fadeIn();
                            };
                            compressedReader.readAsDataURL(blob);
                        }, "image/webp", 0.4); // ✅ WebP with 50% compression
                    };
                };
                reader.readAsDataURL(file);
            }
        });

        $("#removeImage").click(function () {

             console.log("Image removed!");

            $("#imageBase64").val("");
            $("#previewImage").attr("src", "").hide();
            $("#imageUpload").val("");
            $("#removeImage").hide();
        });
         



            // 🔹 Convert Main Problems Dropdown to Checkbox List
            function convertToCheckbox(dropdownId, containerId) {
                var select = $('#' + dropdownId);
                var container = $('#' + containerId);
                container.empty(); // Ensure no duplicate checkboxes

                select.find('option').each(function () {
                    var value = $(this).val();
                    var text = $(this).text();
                    if (value) {
                        var checkbox = $('<input type="checkbox" value="' + value + '" class="mainproblem-checkbox"> ' + text + '<br>');

                        checkbox.change(function () {
                            var selectedValues = [];
                            $('.mainproblem-checkbox:checked').each(function () {
                                selectedValues.push($(this).val());
                                console.log("Selected MAin Problems:", selectedValues); // ✅ Debugging
                            });

                            select.val(selectedValues).change(); // ✅ Trigger change event to fetch Sub Problems
                        });

                        container.append(checkbox);
                    }
                });

                select.hide(); // Hide the original dropdown
            }

            // 🔹 On Main Problem Selection, Fetch and Show Sub Problems as Checkboxes
            $('#SelectedMainProblems').change(function () {
                var mainProblemIds = $(this).val(); // Get selected values (array)

                        // ✅ Preserve already selected sub problems
        let previouslySelected = $('#HiddenSubProblems').val();
        previouslySelected = previouslySelected ? previouslySelected.split(",") : [];

                if (mainProblemIds.length > 0) {
                    $.ajax({
                        url: '@Url.Action("GetSubProblems", "ComplaintRegistrations")',
                        type: 'GET',
                        data: { mainProblemIds: mainProblemIds },
                        traditional: true,  // ✅ Ensures array is sent properly
                        success: function (data) {


                                 console.log("Full API Response:", data)
                                 console.log("Received Data:", data);
                                 console.log("First Item:", data[0]);

                                 var container = $('#SubProblemCheckboxes');
                                 container.empty(); // Clear previous subproblems


                            // console.log("Received Data:", data);

                            $.each(data, function (i, item) {

                                        // console.log("Received Data:", data);
                                        //   console.log("First Item:", data[0]);

                                  console.log("Item Structure:", item);  // 🔍 Check each item in the array
                                  console.log("Main Problem:", item.mainProblem);
                                  console.log("Sub Problems:", item.subProblems);


                                container.append('<h4>' + item.mainProblem+ '</h4>');
                                // var checkbox = $('<input type="checkbox" value="' + item.value + '" class="subproblem-checkbox"> ' + item.text + '<br>');

                                 $.each(item.subProblems, function (j, subItem) {
                        console.log("Sub Problem:", subItem.text);

                            var isChecked = previouslySelected.includes(subItem.value) ? "checked" : ""; // ✅ Preserve selected state


                            var checkbox = $(`<input type="checkbox" value="${subItem.value}" class="subproblem-checkbox" ${isChecked}> ${subItem.text}<br>`);


                                 
                                checkbox.change(function () {
                                    var selectedValues = [];
                                    $('.subproblem-checkbox:checked').each(function () {
                                        selectedValues.push($(this).val());
                                    });

                                    // $('#SelectedSubProblems').val(selectedValues);
                                     $('#HiddenSubProblems').val(selectedValues.join(','));  // ✅ Hidden field me update

                                   console.log("Selectedvalues ki value  yaha tak show laregi :", selectedValues); // ✅ Debugging
                                  console.log("selectedsubproblem me value gai k nahi ye show karega :", $('#SelectedSubProblems').val());
                                   console.log("selectedsuubprblem hodden me value gae k nahi ye bataega ", $('#HiddenSubProblems').val());

                                        });

                                container.append(checkbox);
                            });
                            });
                           $('#SelectedSubProblems').hide(); // Hide the original dropdown
                             // console.log( $('#SelectedSubProblems').hide());
                        }
                    });
                } else {
                    $('#SubProblemCheckboxes').empty(); // Clear if no main problem selected
                }
            });


           // $('form').submit(function (E) { YE TAB KAM AAEGA JAB HUMME IMAGE COPULSARY RAKHNA HOGA

                 $('form').submit(function () {


                // Check if image is uploaded
        // if ($("#imageBase64").val().trim() === "") {
        //     alert("You have to select an image. It's mandatory.");
        //     e.preventDefault(); Stop form from submitting
        //     return false;
        // }
        



        $('#HiddenSubProblems').val($('#HiddenSubProblems').val().split(',')); // ✅ Ensure array format before submit


            console.log("Final Selected Main Problems:", $('#SelectedMainProblems').val());
            console.log("Final Selected Sub Problems:", $('#SelectedSubProblems').val());
            console.log("Hidden Sub Problems Before Submit:", $('#HiddenSubProblems').val()); // ✅ Debug before submitting

        });


            // 🔹 Convert Main Problems Dropdown to Checkboxes on Load
            convertToCheckbox('SelectedMainProblems', 'MainProblemCheckboxes');
        

          });

   </script>
}



