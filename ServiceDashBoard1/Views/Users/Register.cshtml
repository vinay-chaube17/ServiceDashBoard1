


            @model Tuple<ServiceDashBoard1.Models.User, List<ServiceDashBoard1.Models.User>>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Register</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        body {
            background-image: url('/images/laser-cutting-of-metal-sheets.png');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            min-height: 100vh;
        }
    </style>
</head>
<body>
    <div>
        @Html.ActionLink("Back to Admin DashBoard", "Index", "ComplaintRegistrations", null, new { @class = "btn btn-primary m-3" })
    </div>

    <div class="container my-3">
        <div class="row">
            <!-- Left Column: Registration Form -->
            <div class="col-md-6  col-sm-12">
                <div class="card mt-3">
                    <div class="card-header text-center">
                        <h3>Register</h3>
                    </div>
                    <div class="card-body">
                        <form method="post">
                            <div class="mb-3">
                                <label for="Name" class="form-label">Name</label>
                                <input type="text" class="form-control" id="Name" name="Name" value="@Model.Item1?.Name" />
                                <span asp-validation-for="Item1.Name" class="text-danger"></span>
                            </div>

                                <div class="mb-3">
                                    <label for="EmailId" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="EmailId" name="EmailId" value="@Model.Item1?.EmailId" />
                                    <span asp-validation-for="Item1.EmailId" class="text-danger"></span>
                                    <span id="EmailIdError" class="text-danger" style="display:none;"></span>
                                </div>
 

                           @*  <div class="mb-3">
                                <label asp-for="Item1.EmailId" class="form-label"></label>
                                <input asp-for="Item1.EmailId" class="form-control" />
                                <span asp-validation-for="Item1.EmailId" class="text-danger"></span>
                            </div> *@


                            <div class="mb-3">
                                <label for="PhoneNo" class="form-label">Phone Number</label>
                                <input type="tel" class="form-control" id="PhoneNo" name="PhoneNo" value="@Model.Item1?.PhoneNo" />
                                <span asp-validation-for="Item1.PhoneNo" class="text-danger"></span>
                                <span id="PhoneNoError" class="text-danger" style="display:none;"></span>
                            </div>

                            <div class="mb-3">
                                <label for="Address" class="form-label">Address</label>
                                <input type="text" class="form-control" id="Address" name="Address" value="@Model.Item1?.Address" />
                                <span asp-validation-for="Item1.Address" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label for="EmployeeId" class="form-label">EmployeeId</label>
                                <input type="text" class="form-control" id="EmployeeId" name="EmployeeId" value="@Model.Item1?.EmployeeId" />
                                <span asp-validation-for="Item1.EmployeeId" class="text-danger"></span>
                            </div>


                            <div class="mb-3">
                                <label for="Username" class="form-label">Username</label>
                                <input type="text" class="form-control" id="Username" name="Username" value="@Model.Item1?.Username" />
                                <span asp-validation-for="Item1.Username" class="text-danger"></span>
                                <span id="UsernameError" class="text-danger" style="display:none;"></span>
                            </div>

                            <div class="mb-3">
                                <label for="Password" class="form-label">Password</label>
                                <input type="password" class="form-control" id="Password" name="Password" readonly />
                                <span asp-validation-for="Item1.Password" class="text-danger"></span>
                                <span id="Passworderror" class="text-danger" style="display:none;"></span>

                            </div> 


                          @*   <div class="mb-3">
                                <label asp-for="Item1.Password" class="form-label"></label>
                                <input type="password" asp-for="Item1.Password" class="form-control" />
                                <span asp-validation-for="Item1.Password" class="text-danger"></span>
                            </div> *@


                            <div class="mb-3">
                                <label for="Role" class="form-label">AssignTo</label>
                                <select class="form-control" id="Role" name="Role">
                                    <option value="Coordinator">Coordinator</option>
                                    <option value="Sparepart">Sparepart</option>
                                    <option value="Service Engineer">Service Engineer</option>
                                    <option value="Field Engineer">Field Engineer</option>
                                    <option value="Field Operation Manager">Field Operation Manager</option>
                                </select>
                            </div>

                            <div class="mb-3">
                                <label for="isActive" class="form-label"><strong>Status</strong></label>
                                <select class="form-control" id="isActive" name="isActive">
                                <option value="">Please Select</option>
                                <option value="Active">Active</option>
                                <option value="De-Active">De-Active</option>
                            </select>
                            </div>

                            <button type="submit" class="btn btn-primary w-100">Register</button>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Right Column: Registered Users -->
            <div class="col-md-6 col-sm-12">
                <div class="card mt-3">
                    <div class="card-header text-center">
                        <h3>Existing Users</h3>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive" style="max-height: 250px; overflow-y: auto;">
                            <table class="table table-bordered table-striped m-0">
                                <thead class="table-dark sticky-top bg-dark text-white">
                                    <tr>
                                        <th>Role</th>
                                        <th>EmployeeId</th>
                                        <th>Name</th>
                                        <th>Username</th>
                                        <th>CreatedDate</th>
                                        <th>UserStatus</th>
                                        
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var user in Model.Item2)
                                    {
                                        <tr>
                                            <td>@user.Role</td>
                                            <td>@user.EmployeeId</td>
                                            <td>@user.Name</td>
                                            <td>@user.Username</td>
                                            <td>@(user.CreatedDate.HasValue ? user.CreatedDate.Value.ToString("dd-MM-yyyy") : "")</td>
                                            <td>@user.isActive</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>
                <!-- Button and Textbox section below the table -->
                <div class="mt-3 text-center px-3">
                    <button id="toggleStatusBtn" class="btn btn-secondary w-50 mx-auto">
                        Active/De-Active Existing Users
                    </button>
                    <div id="statusSection" style="display:none;" class="mt-2 mx-auto">
                        <!-- Username input -->
                        <input type="text"
                               id="usernameInput"
                               class="form-control mx-auto mb-2"
                               style="max-width: 300px; width: 90%;"
                               placeholder="Enter username" />

                        <!-- Status display & edit -->
                        <select id="statusSelect" class="form-control mx-auto mb-2" style="max-width: 300px; width: 90%;">
                            <option value="">-- Select Status --</option>
                            <option value="Active">Active</option>
                            <option value="DeActive">DeActive</option>
                        </select>

                        <!-- Save button -->
                        <button id="saveStatusBtn" class="btn btn-primary w-50 mx-auto">
                            Save
                        </button>

                        <div id="message" class="mt-2"></div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>


   
     <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
   


    <script>

       

        $(document).ready(function () {
            $("#EmailId, #PhoneNo,#Address,#Password,#Name,#Username").on("input", function () {
                var field = $(this).attr("id");
                $("span[data-valmsg-for='" + field + "']").text("");
                $("#" + field + "Error").text("").hide();
            });

            $("#PhoneNo").on("input", function () {
                var value = $(this).val().trim();
                var errorSpan = $("#PhoneNoError");
                value = value.replace(/^0+/, '');
                $(this).val(value);

                if (!/^\d{10}$/.test(value)) {
                    errorSpan.text("Phone number must be exactly 10 digits").css("color", "red").show();
                } else {
                    errorSpan.text("").hide();
                }
            });


           $("#Password").on("input", function () {
    var value = $(this).val().trim();
    var errorSpan = $("#Passworderror");

    // Regex for your password rules:
    var passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[@@$!%*?&]).{8,}$/;

    if (!passwordRegex.test(value)) {
        errorSpan
            .html("Password must be at least 8 characters long, contain:<br>- 1 uppercase letter<br>- 1 lowercase letter<br>- 1 number<br>- 1 special character (@@ $ ! % * ? &)")
            .css("color", "red")
            .show();
    } else {
        errorSpan.text("").hide();
    }
});

      $("#EmailId").on("input", function () {
                var value = $(this).val().trim();
                var errorSpan = $("#EmailIdError");
                var emailPattern = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

                if (!emailPattern.test(value)) {
                    errorSpan.text("Invalid email format").css("color", "red").show();
                } else {
                    errorSpan.text("").hide();
                }
            });



            $("#EmailId, #PhoneNo, #Username").on("blur", function () {
                var field = $(this).attr("id");
                var value = $(this).val().trim();
                var errorSpan = $("#" + field + "Error");

                if (value === "") {
                    errorSpan.text("").hide();
                    return;
                }

                $.post("/Users/CheckExistingUser", { field: field, value: value }, function (data) {
                    if (data.exists) {
                        errorSpan.text(field + " already exists! Please choose another.").css("color", "red").show();
                    } else {
                        errorSpan.text("").hide();
                    }
                }).fail(function () {
                    errorSpan.text("Error checking " + field).css("color", "red").show();
                });
            });
        });







                     $(document).ready(function () {
            $("#toggleStatusBtn").click(function () {
                $("#statusSection").toggle();
                $("#usernameInput").val("");
                $("#statusSelect").val("");
                $("#message").text("");
                $("#usernameInput").focus();
            });
                     let inputTimeout;

            // On username input blur (or you can change event to 'change' or a button)
            $("#usernameInput").on('input', function () {
                        clearTimeout(inputTimeout);
                const self = this;

                inputTimeout = setTimeout(function () {
                var username = $(self).val().trim();
                console.log(username);
                if(username){
                    // Call server to get status for username
                    $.ajax(
                        {
                        url: '@Url.Action("GetUserStatus","Users")', // Update controller/action as needed
                        type: 'GET',
                        data: { username: username },
                            
                        success: function(response) {
                            console.log(response.status);
                            if(response.status){
                              console.log(username);
                              console.log(response.status);

                                $("#statusSelect").val(response.status);
                                $("#message").text("");

                            } else {
                                $("#statusSelect").val("");
                                $("#message").text("User not found or error fetching status").css({
                 "color": "white",
                 "font-weight": "bold",
                 "background-color": "Red", // or dark background for contrast
                 "padding": "8px",
                 "border-radius": "5px"
             });
              resetStatusForm();
                            }
                        },
                        error: function() {
                            $("#message").text("Error fetching status").css({
                 "color": "white",
                 "font-weight": "bold",
                 "background-color": "Red", // or dark background for contrast
                 "padding": "8px",
                 "border-radius": "5px"
             });
              resetStatusForm();
                        }
                    });
                } else {
                    $("#statusSelect").val("");
                    $("#message").text("");
                }

                        }, 3000); // ✅ 4 seconds delay
            });

             function generatePassword() {
        const name = $("#Name").val().trim();
        const email = $("#EmailId").val().trim();
        const phone = $("#PhoneNo").val().trim();
        const address = $("#Address").val().trim();
        const employeeId = $("#EmployeeId").val().trim();

        if (!name || !email || !phone || !address || !employeeId) {
            $("#Password").val("");
            $("#PasswordStatus").text("");
            return;
        }

        const initials = name.toLowerCase().split(' ').map(w => w[0]).join('').substring(0, 2);
        const addressPart = address.toLowerCase().replace(/\s+/g, '').substring(0, 3);
        const emailPart = email.substring(0, 2).toUpperCase();
        const empPart = employeeId.toLowerCase().substring(0, 2);

        const upper = String.fromCharCode(65 + Math.floor(Math.random() * 26));
        const lower = String.fromCharCode(97 + Math.floor(Math.random() * 26));
        const number = Math.floor(10 + Math.random() * 90);
        const specialChars = "@@$!%*?&";
        const special = specialChars[Math.floor(Math.random() * specialChars.length)];

        const base = (addressPart + emailPart + initials + empPart).substring(0, 4);
        const password = base + upper + lower + number + special;

        // Check if email already exists
        $.post("/Users/IsPasswordUniqueEmployee", {
             email: email,
        phoneNo: phone,
        employeeId: employeeId
        }, function (data) {
            if (data.exists) {
                $("#Password").val(data.password);
                                $("#Passworderror").text(data.message).show();
            } else if (!data.exists) {
                $("#Password").val(password);
                                        $("#Passworderror").text(data.message).show();
            } else {
                $("#Password").val("");
                                        $("#Passworderror").text(data.message).show();
            }
        });
    }

    $("#Name, #PhoneNo, #Address, #EmployeeId, #EmailId").on("input", function () {
        clearTimeout(window.passwordTimeout);

        const name = $("#Name").val().trim();
        const phone = $("#PhoneNo").val().trim();
        const address = $("#Address").val().trim();
        const employeeId = $("#EmployeeId").val().trim();
        const email = $("#EmailId").val().trim();

        if (name && phone && address && employeeId && email) {
            $("#PasswordStatus").text("Waiting 5 seconds to generate password...");
            window.passwordTimeout = setTimeout(() => {
                $("#PasswordStatus").text("Generating password...");
                generatePassword();
            }, 10000); // 5 seconds delay
        } else {
            $("#Password").val("");
            $("#PasswordStatus").text("");
        }
    });

            // Save button click
            $("#saveStatusBtn").click(function () {
                var username = $("#usernameInput").val().trim();
                var status = $("#statusSelect").val();

                if(!username){
                    alert("Please enter username");
                    return;
                }
                if(!status){
                    alert("Please select status");
                    return;
                }

                $.ajax({
                    url: '@Url.Action("UpdateUserStatus", "Users")', // Update controller/action as needed
                    type: 'POST',
                    data: { username: username, status: status },
                    success: function(response) {
                        if(response.status || response.username)
                        {
                           $("#message").text("Status updated successfully")
             .css({
                 "color": "white",
                 "font-weight": "bold",
                 "background-color": "green", // or dark background for contrast
                 "padding": "8px",
                 "border-radius": "5px"
             });

                   $("table tbody tr").each(function () {
            var rowUsername = $(this).find("td:nth-child(4)").text().trim(); // 3rd column is Username
            if (rowUsername === username) {
                $(this).find("td:last").text(status); // last column is isActive
            }
        });

             resetStatusForm();

                        } else {
                            $("#message").text("Failed to update status: " + response.message) .css({
                 "color": "white",
                 "font-weight": "bold",
                 "background-color": "Red", // or dark background for contrast
                 "padding": "8px",
                 "border-radius": "5px"
             });

             resetStatusForm();
                         }
                    },
                    error: function() {
                        $("#message").text("Error updating status").css({
                 "color": "white",
                 "font-weight": "bold",
                 "background-color": "Red", // or dark background for contrast
                 "padding": "8px",
                 "border-radius": "5px"
             });

              resetStatusForm();
                    }
                });
            });

                    function resetStatusForm() {
            setTimeout(function () {
                $("#usernameInput").val("").focus();
                $("#statusSelect").val("");
                $("#message").fadeOut(300, function () {
                    $(this).text("").removeAttr("style").show();
                });
            }, 5000); // 5 seconds wait so user can read the message
        }



        });
    </script>

   

</body>
</html>
