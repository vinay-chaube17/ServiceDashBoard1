

@model ServiceDashBoard1.Models.ServiceModel

@{
    var userRole = Context.Session.GetString("Role")?.Trim().ToLower();
    var isCoordinator = userRole == "coordinator";
    var isFieldManager = userRole == "field operations manager";

}

@{
    var userRole1 = (ViewBag.Role as string)?.ToLower();
}

@if (userRole1 == "customer")
{
    <div class="alert alert-info align-items-center">
        Welcome, Customer! You can only view your complaint details here.
    </div>
}


<div class="container mt-4">
    <h2 class="text-center mb-4 text-warning bg-dark py-2 rounded shadow">
        <i class="fas fa-tools me-2"></i> Complaint Details
    </h2>
    @if (isCoordinator || isFieldManager)
    {
        <div class="mb-3">
            <a asp-controller="ComplaintRegistrations" asp-action="Index" class="btn btn-primary px-4 fw-bold">
                Back To Admin Dashboard
            </a>
        </div>
    }

    <div class="card shadow p-4 d-flex flex-column" style="height: 65vh;">
        <div class="table-responsive flex-grow-1">

            <table class="table table-bordered align-middle h-100 mb-0">
                <tbody class="h-100 d-flex flex-column justify-content-between">
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Token:</th>
                        <td class="flex-fill">@Model.TokenNumber</td>
                    </tr>
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Machine Serial No :</th>
                        <td class="flex-fill">@Model.MachineSerialNo</td>
                    </tr>
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Company:</th>
                        <td class="flex-fill">@Model.CompanyName</td>
                    </tr>
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Email:</th>
                        <td class="flex-fill">@Model.Email</td>
                    </tr>
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Phone:</th>
                        <td class="flex-fill">@Model.PhoneNo</td>
                    </tr>
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Address:</th>
                        <td class="flex-fill">@Model.Address</td>
                    </tr>
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Contact Person:</th>
                        <td class="flex-fill">@Model.ContactPerson</td>
                    </tr>
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Description:</th>
                        <td class="flex-fill">@Model.ComplaintDescription</td>
                    </tr>
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Main Problem(s):</th>
                        <td class="flex-fill">
                            <input type="text" class="form-control" value="@Model.MainProblemText" readonly />
                        </td>
                    </tr>
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Sub Problem(s):</th>
                        <td class="flex-fill">
                            <input type="text" class="form-control" value="@Model.SubProblemText" readonly />
                        </td>
                    </tr>
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Current Status:</th>
                        <td class="flex-fill">
                            <span class="badge bg-success text-white fw-bold fs-5 text-uppercase">@Model.Status</span>
                        </td>
                    </tr>
                    <tr class="flex-fill d-flex">
                        <th class="w-25">Image:</th>
                        <td class="flex-fill text-center">
                            @if (!string.IsNullOrEmpty(Model.ImageBase64))
                            {
                                <img src="data:image/png;base64,@Model.ImageBase64" alt="Complaint Image" class="img-thumbnail" style="max-width: 200px;" />
                            }
                            else
                            {
                                <span class="text-muted">No Image Available</span>
                            }
                        </td>
                    </tr>

                    @if (!isCoordinator && Model.Status == "Viewed" && userRole1 != "customer")
                    {
                        <tr class="flex-fill d-flex">
                            <th class="w-25">Accepted</th>
                            <td class="flex-fill">
                                <input type="checkbox" id="myCheckbox" name="myCheckbox" />
                                <label for="myCheckbox" style="font-size: 12px; color: #dc3545; margin-left: 8px;">
                                    (Once accepted, this complaint cannot be edited)
                                </label>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>



    <div class="mt-4">
        @* <h3 class="fw-bold text-dark">Remark</h3> *@
        <form id="complaintForm" method="post">
            <input type="hidden" asp-for="ComplaintId" />
            <input type="hidden" id="selectedStatus" name="Status" value="@Model.Status" />
            <input type="hidden" id="dynamicAction" name="actionName" value="" />
            <!-- ✅ Add this line below -->
            <input type="hidden" name="FinalRemark" id="FinalRemarkHidden" />
            <input type="hidden" id="userRole" value="@userRole" />

            <!-- ✅ Show remark only if it contains data -->
            @if (!string.IsNullOrWhiteSpace(Model.Remark))
            {
                <div class="form-group mt-4">
                    <label><strong>Remark</strong></label>
                    <textarea class="form-control fw-bold text-dark" rows="4" readonly>@Model.Remark</textarea>
                </div>
            }


            <!-- Final Remark Field -->
            @if (!string.IsNullOrWhiteSpace(Model.FinalRemark))
            {
                <div class="form-group">
                    <label><strong>Final Remark</strong></label>
                    <textarea asp-for="FinalRemark" name="FinalRemark" class="form-control fw-bold text-dark" rows="4" readonly>@Model.FinalRemark</textarea>
                </div>
            }

            @if (!isCoordinator && !isFieldManager)
            {
                <div class="row justify-content-center text-center mt-3 g-2">


                    @if (userRole != "coordinator" && userRole != "field operation manager" && userRole1 != "customer")
                    {

                        <div class="col-12 col-md-auto">
                        <div class="dropdown d-inline">


                            <button type="button" class="btn btn-outline-danger px-4 mx-5 dropdown-toggle" data-bs-toggle="dropdown" id="statusBtn">
                                Select Status
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="statusBtn">


                                @if (Model.Status == "Accepted" || Model.Status == "Pending" || Model.Status == "Hold" || Model.Status == "On Hold")
                                {
                                    <li><a class="dropdown-item" href="#" onclick="changeStatus('Pending')">Pending</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="changeStatus('Hold')">Hold</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="changeStatus('Completed')">Completed</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="changeStatus('Cancelled')">Cancelled</a></li>
                                }
                            </ul>
                        </div>
                        </div>
                    }
                    @if (userRole == "field operation manager" )
                    {
                        <div class="col-12 col-md-auto">

                        <a asp-controller="ComplaintRegistrations" asp-action="FieldEngineerDashBoard" class="btn btn-sm btn-outline-warning px-4 mx-3 col-12 col-md-auto mb-2">Back To Field Operation Manager Dashboard</a>
                        </div>
                    }
                    else if (isCoordinator)
                    {
                        <div class="col-12 col-md-auto">

                        <a asp-controller="ComplaintRegistrations" asp-action="Index" class="btn btn-sm btn-outline-warning px-4 mx-3 col-12 col-md-auto mb-2">Back To Field Operation Manager Dashboard</a>
                        </div>

                    }
                    else if (userRole1== "customer")
                    {
                        <div class="col-12 col-md-auto">

                            <a asp-controller="ComplaintRegistrations" asp-action="CustomerComplaintIndex" class="btn btn-sm btn-outline-warning px-4 mx-3 col-12 col-md-auto mb-2">Back To Dashboard</a>
                        </div>

                    }
                   
                    else
                    {
                        <div class="col-12 col-md-auto">
<button type="button" class="btn btn-primary px-4 mx-5" onclick="return submitForm()">Save Complaint</button>
</div>
                        <div class="col-12 col-md-auto">

                        <a asp-controller="ComplaintRegistrations" asp-action="ServiceDashBoard1" class="btn btn-sm btn-outline-warning px-4 mx-3 col-12 col-md-auto mb-2">Back To ServiceDashboard</a>
                        </div> 
                    }
                </div>



                <!-- Final Remark Modal -->
                <div class="modal fade col-12 col-md-auto mb-2" id="finalRemarkModal" tabindex="-1" aria-labelledby="finalRemarkModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Enter Final Remark</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <textarea class="form-control" id="finalRemarkInput" rows="4" placeholder="Enter final remark..."></textarea>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-primary" onclick="handleModalSubmit()">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Remark Modal -->
                <div class="modal fade col-12 col-md-auto mb-2" id="remarkModal" tabindex="-1" aria-labelledby="remarkModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Enter Remark</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <textarea class="form-control" id="remarkModalInput" rows="4" placeholder="Write your remark here..."></textarea>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-primary" onclick="handleModalSubmit()">Save Remark</button>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <div>
              
                @if (Model.Status == "Completed" || Model.Status == "Cancelled")
                {
                    <div class="text-center mt-3">
                        <a asp-controller="ComplaintRegistrations"
                           asp-action="DownloadComplaintPdf"
                           asp-route-id="@Model.ComplaintId"
                           class="btn btn-outline-success fw-bold">
                            Download as PDF
                        </a>
                    </div>
                }

            </div>
        </form>
    </div>
</div>

<script>

   

    document.addEventListener("DOMContentLoaded", function () {
         const checkbox = document.getElementById("myCheckbox");

         if (checkbox) {
             checkbox.addEventListener("change", function () {
                 if (checkbox.checked) {
                     // Set status to Accepted
                     document.getElementById("statusBtn").innerText = "Accepted";
                     document.getElementById("selectedStatus").value = "Accepted";
                     document.getElementById("dynamicAction").value = "Accepted";
                 } else {
                     // Optional: Reset if unchecked (can skip if not needed)
                     document.getElementById("statusBtn").innerText = "Select Status";
                     document.getElementById("selectedStatus").value = "@Model.Status";
                     document.getElementById("dynamicAction").value = "";
                 }
             });
         }
     });



     function changeStatus(status) {

         document.getElementById("statusBtn").innerText = status;
         document.getElementById("selectedStatus").value = status;
         const actionMap = {

             "Pending": "Pending",
             "Hold": "Hold",

             "Completed": "SaveRemark",
             "Cancelled": "Cancelled",

         };

         document.getElementById("dynamicAction").value = actionMap[status] || "Viewed";
                console.log(document.getElementById("dynamicAction").value = actionMap[status] || "Viewed");
     }

     function submitForm() {

         const status = document.getElementById("selectedStatus").value.trim();
         // const remark = document.querySelector("textarea[name='Remark']").value.trim();
          const finalRemark = document.getElementById("finalRemarkInput").value.trim();

         const remarkField = document.querySelector("textarea[name='Remark']");
     const remark = remarkField ? remarkField.value.trim() : "";

     // const finalRemarkInput = document.getElementById("finalRemarkInput");
     // const finalRemark = finalRemarkInput ? finalRemarkInput.value.trim() : "";


         if ( status === "Viewed") {
             alert("Please select a valid status before submitting the form!");
             return false;
         }


     // ✅ Agar Completed/Cancelled aur finalRemark already hai, then submit directly
     if ((status === "Completed" || status === "Cancelled") && finalRemark !== "") {
         document.getElementById("FinalRemarkHidden").value = finalRemark;
         return confirmAndSubmit();
     }

             // ✅ New check added for Pending or Hold without remark
     // if ((status === "Pending" || status === "Hold") && remark === "") {
     //     alert("You have to write a remark.");

     //     return false;
     // }

        // 🔥 If Pending or Hold selected but remark empty, open modal
     if ((status === "Pending" || status === "Hold") && remark === "") {
         const modal = new bootstrap.Modal(document.getElementById("remarkModal"));
         modal.show();
         return false;
     }

         if ((status === "Completed" || status === "Cancelled")) {
             const modal = new bootstrap.Modal(document.getElementById("finalRemarkModal"));
             modal.show();

             return false;
         }

         return confirmAndSubmit();
     }





     function submitWithFinalRemark() {
         const finalRemark = document.getElementById("finalRemarkInput").value.trim();

         if (!finalRemark) {
             alert("Please enter a final remark.");
             return;
         }

     document.getElementById("FinalRemarkHidden").value = finalRemark;

              const modal = bootstrap.Modal.getInstance(document.getElementById("finalRemarkModal"));
         modal.hide();
         confirmAndSubmit();
     }



     function confirmAndSubmit() {
         if (confirm("Are you sure you want to submit the form?")) {
             let action = document.getElementById("dynamicAction").value;
             const status = document.getElementById("selectedStatus").value;
             if (!action || action === "SaveRemark") {
                 action = status;
             }
             document.getElementById("complaintForm").action = "/Service/" + action;
             document.getElementById("complaintForm").submit();
             return true;
         }
         return false;
     }

        document.addEventListener("DOMContentLoaded", function () {
             hideStatusBtnIfViewed(); // ✅ RIGHT PLACE to add this function bcoz dom call fristly when page load
         const finalRemarkField = document.querySelector("textarea[name='FinalRemark']");
         const remarkField = document.querySelector("textarea[name='Remark']");

         // ✅ Safe null check before accessing value
         if (finalRemarkField && finalRemarkField.value.trim() !== "") {
             finalRemarkField.classList.remove("d-none");
             finalRemarkField.readOnly = true;

             // Disable editing if Final Remark is already saved
             if (remarkField) remarkField.readOnly = true;

             const statusBtn = document.getElementById("statusBtn");
             if (statusBtn) statusBtn.disabled = true;

     const submitBtn = document.querySelector("button[onclick='return submitForm()']");
                 if (submitBtn) submitBtn.disabled = true;

             document.querySelectorAll(".dropdown-item").forEach(item => item.classList.add("disabled"));
         }

     });




         function saveRemarkAndSubmit() {
       const remarkText = document.getElementById("remarkModalInput").value.trim();
    // Create or update hidden remark textarea
         let remarkField = document.querySelector("textarea[name='Remark']");

         if (!remarkField) {
             remarkField = document.createElement("textarea");
             remarkField.name = "Remark";
             remarkField.style.display = "none";
             document.getElementById("complaintForm").appendChild(remarkField);
         }
          remarkField.value = remarkText;

         // Hide modal and submit
         const modal = bootstrap.Modal.getInstance(document.getElementById("remarkModal"));
         modal.hide();
         confirmAndSubmit();
     }



         function handleModalSubmit() {

         const status = document.getElementById("selectedStatus").value.trim();

         if (status === "Pending" || status === "Hold") {
             saveRemarkAndSubmit();
         } else if (status === "Completed" || status === "Cancelled") {
             submitWithFinalRemark();
         } else {
             alert("Something went wrong. Please try again.");
         }
     }


         function hideStatusBtnIfViewed() {
         const currentStatus = document.getElementById("selectedStatus").value.trim();
         const statusBtn = document.getElementById("statusBtn");

         if (currentStatus === "Viewed" && statusBtn) {
             statusBtn.style.display = "none";
         }
     }

         document.addEventListener("DOMContentLoaded", function () {
        const userRole = document.getElementById("userRole")?.value?.toLowerCase();

        if (userRole === "field operations manager") {
            // Hide Select Status Dropdown
            const statusDropdown = document.getElementById("statusBtn")?.closest(".dropdown");
            if (statusDropdown) {
                statusDropdown.style.display = "none";
            }

            // Hide Save Complaint Button
            const saveButton = document.querySelector("button.btn.btn-primary.px-4.mx-5");
            if (saveButton) {
                saveButton.style.display = "none";
            }

            // Hide Back To AdminDashboard button
            const backToAdminBtn = document.querySelector("a[href*='ComplaintRegistrations'][href*='Index']");
            if (backToAdminBtn) {
                backToAdminBtn.style.display = "none";
            }
        }
    });
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script> 

